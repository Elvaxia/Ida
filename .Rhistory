getwd()
package_version('data.ta')
package_version('data.table')
package_version('data.table')
packageVersion('data.table')
packageVersion('rtracklayer')
library(rtracklayer)
library(data.table)
library(GenomicRanges)
library(GenomicFeatures)
library(annotatr)
library(dplyr)
library(changepoint)
library(parallel)
library(Rsamtools)
devtools::document()
q()
getwd()
document()
library("devtools")
library(roxygen2)
document()
suppressPackageStartupMessages({
library(rtracklayer)
library(data.table)
library(GenomicRanges)
library(GenomicFeatures)
library(annotatr)
library(dplyr)
library(changepoint)
library(parallel)
library(Rsamtools)
})
document()
document()
setwd("..")
install('Ida')
document()
#' Changepoint of normalized coverage
#' @param SampleInfo a data frame with columns named sample,Bam,Seq_depth,Group
#' @param UTRframe a data frame of unioned 3utr region from ensembl genes(without introns)
#' @return A data frame of candidate poly(A) sites
#' @author Xia Xiao
#' @details function which compute the change points of reads coverage of 3'utr frame
#' @seealso \code{lm}
#' @export
#' Changepoint of normalized coverage
#' @param SampleInfo a data frame with columns named sample,Bam,Seq_depth,Group
#' @param UTRframe a data frame of unioned 3utr region from ensembl genes(without introns)
#' @return A data frame of candidate poly(A) sites
#' @author Xia Xiao
#' @details function which compute the change points of reads coverage of 3'utr frame
#' @seealso \code{lm}
#' @export
DetectPAs <- function(GR, cut.off=30){
cv <- GenerateReadsPerBase(GR=GR,
sample.info = sample.info,
flag = flag,
p_param = p_param)
if(is.null(cv)|mean(cv$Total.reads) <= cut.off){
GR.res <- as.data.frame(matrix(NA,1,length(samples)*3 +1))
colnames(GR.res) <-c(paste0(samples,'.L_Coverage'),paste0(samples,'.S_Coverage'),
paste0(samples,'.RUD'),'PA')
GR.res$gene_id <- unique(GR$use.names)
}else{
GR.res <- ChangePoint.RUD(GR=GR,cv=cv)
}
GR.res$ID <- names(GR)
return(GR.res)
}
document()
document()
q()
getwd()
setwd('/mnt/raid61/Personal_data/xiaoxia/APA/Project/IDA')
setwd('/mnt/raid61/Personal_data/xiaoxia/APA/Project/IDA')
q()
getwd()
library(roxygen2)
library(devtools)
document()
document()
document()
library(Ida)
?GenerateReadsPerBase
?DetectPAs
document()
?GenerateReadsPerBase
document()
?GenerateReadsPerBase
document()
?GenerateReadsPerBase
library(Ida)
ls()
?GenerateReadsPerBase
sample.info <- '../ALL_sample.info.txt'
sample.info <- fread('../ALL_sample.info.txt')
library(data.table)
sample.info <- fread('../ALL_sample.info.txt')
gr <- fread('../hg38_93_unioned_3utr.txt')
library(Ida)
GrList <- makeGRangesListFromDataFrame(gr,
keep.extra.columns = TRUE,
split.field = 'gene_id')
library(GenomicRanges)
GrList <- makeGRangesListFromDataFrame(gr,
keep.extra.columns = TRUE,
split.field = 'gene_id')
te <- GrList[[1]]
te
width(te)
te <- GrList[[2]]
width(te)
te
cv <- GenerateReadsPerBase(te,sample.info)
suppressPackageStartupMessages({
library(rtracklayer)
library(data.table)
library(GenomicRanges)
library(GenomicFeatures)
library(annotatr)
library(dplyr)
library(annotatr)
library(dplyr)
library(changepoint)
library(parallel)
library(Rsamtools)
})
cv <- GenerateReadsPerBase(te,sample.info)
head(cv)
sdf <- DetectPAs(te)
ls()
te
DetectPAs(te,sample.info)
#' Changepoint of normalized coverage
#' @param SampleInfo a data frame with columns named sample,Bam,Seq_depth,Group
#' @param UTRframe a data frame of unioned 3utr region from ensembl genes(without introns)
#' @return A data frame of candidate poly(A) sites
#' @author Xia Xiao
#' @details function which compute the change points of reads coverage of 3'utr frame
#' @export
DetectPAs <- function(GR, SampleInfo,cut.off=30){
cv <- GenerateReadsPerBase(GR=GR,
SampleInfo=SampleInfo
)
if(is.null(cv)|mean(cv$Total.reads) <= cut.off){
GR.res <- as.data.frame(matrix(NA,1,length(samples)*3 +1))
colnames(GR.res) <-c(paste0(samples,'.L_Coverage'),paste0(samples,'.S_Coverage'),
paste0(samples,'.RUD'),'PA')
GR.res$gene_id <- unique(GR$use.names)
}else{
GR.res <- ChangePoint.RUD(GR=GR,cv=cv)
}
GR.res$ID <- names(GR)
return(GR.res)
}
DetectPAs(te,sample.info)
cv <- GenerateReadsPerBase(GR=GR,
SampleInfo=SampleInfo
)
cv <- GenerateReadsPerBase(GR=te,
SampleInfo=sample.info
)
head(cv)
if(is.null(cv)|mean(cv$Total.reads) <= cut.off){
GR.res <- as.data.frame(matrix(NA,1,length(samples)*3 +1))
colnames(GR.res) <-c(paste0(samples,'.L_Coverage'),paste0(samples,'.S_Coverage'),
paste0(samples,'.RUD'),'PA')
GR.res$gene_id <- unique(GR$use.names)
}else{
GR.res <- ChangePoint.RUD(GR=GR,cv=cv)
}
#' Changepoint of normalized coverage
#' @param SampleInfo a data frame with columns named sample,Bam,Seq_depth,Group
#' @param UTRframe a data frame of unioned 3utr region from ensembl genes(without introns)
#' @return A data frame of candidate poly(A) sites
#' @author Xia Xiao
#' @details function which compute the change points of reads coverage of 3'utr frame
#' @export
DetectPAs <- function(gr, s,cut.off=30){
cv <- GenerateReadsPerBase(GR=gr,
SampleInfo=s
)
if(is.null(cv)|mean(cv$Total.reads) <= cut.off){
GR.res <- as.data.frame(matrix(NA,1,length(samples)*3 +1))
colnames(GR.res) <-c(paste0(samples,'.L_Coverage'),paste0(samples,'.S_Coverage'),
paste0(samples,'.RUD'),'PA')
GR.res$gene_id <- unique(GR$use.names)
}else{
GR.res <- ChangePoint.RUD(GR=GR,cv=cv)
}
GR.res$ID <- names(GR)
return(GR.res)
}
DetectPAs(te,sample.info)
?GenerateReadsPerBase
ChangePoint.RUD(te,cv)
q()
library(Ida)
getwd()
sample.info <- fread('../ALL_sample.info.txt')
library(Ida)
sample.info <- fread('../ALL_sample.info.txt')
q()
